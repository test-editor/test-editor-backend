plugins {
    id 'org.owasp.dependencycheck' version '3.1.0'
    id 'net.researchgate.release' version '2.6.0'
    id 'org.xtext.xtend' version '2.0.1'
}

subprojects {
    repositories {
        jcenter()
        mavenLocal()
        maven {
            url  "http://dl.bintray.com/franzbecker/maven"
        }
        maven {
            url 'https://repo.gradle.org/gradle/libs-releases'
        }
        maven {
            url  "http://dl.bintray.com/test-editor/maven"
        }
    }

    apply plugin: 'org.owasp.dependencycheck'
    apply plugin: 'java'
    apply plugin: 'org.xtext.xtend'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'application'

    group = 'org.testeditor.web'

    ext.configPath = "./"
    if (project.hasProperty('localconfig')) {
        ext.configFile = 'config.local.yml'
    } else {
        ext.configFile = 'config.yml'
    }

    ext.versions = new HashMap<String,String>()

    // configure logging within tests (see https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.logging.TestLogging.html)
    // show standard out during test to see logging output
    test.testLogging.showStandardStreams = true
    // make sure that assertion failures are reported more verbose!
    test.testLogging.exceptionFormat = 'full'

    setVersionDefaults(ext, [
        dropwizard: '1.3.7',
        testEditorDropwizard: '0.18.+',
        xtext: '2.15.0',
        testEditorLanguage: '2.1.+'
    ])

    sourceCompatibility = '1.10'
    targetCompatibility = '1.10'

    dependencyCheck {
        autoUpdate=true
        cveValidForHours=1
        format='ALL'
        data {
            directory='./.odcdb'
        }
    }

    sourceSets {
          main.xtendOutputDir = 'src/main/xtend-gen'
          test.xtendOutputDir = 'src/test/xtend-gen'
    }

    dependencies {
        compile "org.eclipse.xtend:org.eclipse.xtend.lib:$versions.xtext"
        compile "org.testeditor.web:org.testeditor.web.dropwizard:$versions.testEditorDropwizard"
        compile 'commons-io:commons-io:2.6'
        compile 'org.apache.commons:commons-text:1.4'

        testCompile "org.testeditor.web:org.testeditor.web.dropwizard.testing:$versions.testEditorDropwizard"
        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-core:2.13.0'
        testCompile 'de.xtendutils:junit:0.0.4'
        testCompile "io.dropwizard:dropwizard-testing:$versions.dropwizard"
    }

	// configure logging within tests (see https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.logging.TestLogging.html)
	// show standard out during test to see logging output
	test.testLogging.showStandardStreams = true
	// make sure that assertion failures are reported more verbose!
	test.testLogging.exceptionFormat = 'full'

    afterEvaluate {
        println "Configuration for ($project.name):"
        println "  dependencies: $versions"
        println "  dropwizard configuration file: $configFile"
    }

}


release {
    preTagCommitMessage = '[release]'
    tagCommitMessage = '[release]'
    newVersionCommitMessage = '[release] new version'
    tagTemplate = 'v${version}'
}

task docker {
    dependsOn = subprojects.collect{"${it.name}:docker"}
}

def setVersionDefaults(ext, props) {
    props.each{ k,v -> setVersionDefault(ext, k, v) }
}

def setVersionDefault(ext, artifactName, defaultVersion) {
    if (!project.hasProperty('versions') || !project['versions'][artifactName] || project['versions'][artifactName] == null) {
        ext['versions'][artifactName] = defaultVersion
    } else {
        ext['versions'][artifactName] = project['versions'][artifactName]
    }
}
