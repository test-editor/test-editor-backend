plugins {
    id 'org.testeditor.gradle-plugin' version '0.8'
    id 'maven'
    id 'eclipse'
}

group = 'org.testeditor.demo'
version = '1.0.0-SNAPSHOT'

// In this section you declare where to find the dependencies of your project
repositories {
    jcenter()
    maven { url "http://dl.bintray.com/test-editor/Fixtures" }
    maven { url "http://dl.bintray.com/test-editor/maven/" }
}

// Configure the testeditor plugin
testeditor {
	version '1.17.1'
	xtextVersion '2.15.0'
}

sourceCompatibility = '1.10'
targetCompatibility = '1.10'


// configure logging within tests (see https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.logging.TestLogging.html)
// show standard out during test to see logging output
test.testLogging.showStandardStreams = true
// make sure that assertion failures are reported more verbose!
test.testLogging.exceptionFormat = 'full'

// In this section you declare the dependencies for your production and test code
dependencies {
	compile 'org.testeditor.fixture:core-fixture:4.1.5'
	compile 'org.testeditor.fixture:web-fixture:4.1.1'
	testCompile 'junit:junit:4.12'
}

// add environmental variables needed by the test (for any 'require <var-name>' in tcl)
// test.doFirst {
//	environment 'requiredVariable', 'value'
// }

// add proxy settings to the environment, if present (e.g. in gradle.properties)
// keep in mind that gradle.properties w/i user ~/.gradle/gradle.properties might override project settings
if (System.properties.containsKey('http.proxyHost')) { // set proxy properties only if present
    test.doFirst {
        println 'Configuring System Properties for Proxy'
        systemProperty 'http.nonProxyHosts', System.properties['http.nonProxyHosts']
        systemProperty 'http.proxyHost', System.properties['http.proxyHost']
        systemProperty 'http.proxyPort', System.properties['http.proxyPort']
        systemProperty 'http.proxyUser', System.properties['http.proxyUser']
        systemProperty 'http.proxyPassword', System.properties['http.proxyPassword']
        systemProperty 'https.proxyHost', System.properties['https.proxyHost']
        systemProperty 'https.proxyPort', System.properties['https.proxyPort']
    }
}

// add environmental variables needed by the test (for any 'require <var-name>' in tcl)
tasks.withType(Test) {
	// User (Peter Productowner)
	environment 'userproductowner', 'productowner'
	environment 'passwordproductowner', 'productowner'
    // User (Thomas Team)
    environment 'userteam', 'team'
	environment 'passwordteam', 'team' 
 }

task printTestClasspath {
	doLast {
		configurations.testRuntime.each { println it }
	}
}



